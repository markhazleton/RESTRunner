@model RESTRunner.Web.Models.ViewModels.CollectionUploadViewModel
@{
    ViewData["Title"] = "Upload Collection";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h2">Upload Postman Collection</h1>
        <a href="/Collection" class="btn btn-outline-secondary">Back to Collections</a>
    </div>

    @if (TempData["Warning"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            @TempData["Warning"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <form asp-action="Upload" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Collection Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Collection Name *</label>
                            <input asp-for="Name" class="form-control" placeholder="Enter a descriptive name" required>
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe this collection (optional)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="TagsString" class="form-label">Tags</label>
                            <input asp-for="TagsString" class="form-control" placeholder="api, test, postman">
                            <div class="form-text">Comma-separated tags for organizing collections</div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="CollectionFile" class="form-label">Postman Collection File *</label>
                            <input asp-for="CollectionFile" type="file" class="form-control" accept=".json" required>
                            <span asp-validation-for="CollectionFile" class="text-danger"></span>
                            <div class="form-text">Select a Postman collection JSON file (max 10MB)</div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between">
                            <a href="/Collection" class="btn btn-outline-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary">
                                Upload Collection
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div class="col-lg-4">
            <!-- Upload Instructions -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0">Instructions</h6>
                </div>
                <div class="card-body">
                    <ol class="list-group list-group-numbered list-group-flush">
                        <li class="list-group-item border-0 px-0">
                            <strong>Export from Postman:</strong>
                            <br><small class="text-muted">In Postman, right-click your collection and select "Export"</small>
                        </li>
                        <li class="list-group-item border-0 px-0">
                            <strong>Choose Collection v2.1:</strong>
                            <br><small class="text-muted">Select "Collection v2.1" format</small>
                        </li>
                        <li class="list-group-item border-0 px-0">
                            <strong>Save JSON file:</strong>
                            <br><small class="text-muted">Save the .json file to your computer</small>
                        </li>
                        <li class="list-group-item border-0 px-0">
                            <strong>Upload here:</strong>
                            <br><small class="text-muted">Select the JSON file and provide details</small>
                        </li>
                    </ol>
                </div>
            </div>

            <!-- Requirements -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0">Requirements</h6>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <strong>[?]</strong> Postman Collection v2.1 format
                        </li>
                        <li class="mb-2">
                            <strong>[?]</strong> JSON file extension (.json)
                        </li>
                        <li class="mb-2">
                            <strong>[?]</strong> Maximum file size: 10MB
                        </li>
                        <li class="mb-2">
                            <strong>[?]</strong> Valid JSON structure
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Sample Collection -->
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">Sample Collection Structure</h6>
                </div>
                <div class="card-body">
                    <pre class="small"><code>{
  "info": {
    "name": "My API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Get Users",
      "request": {
        "method": "GET",
        "url": "{{api-url}}/api/users"
      }
    }
  ]
}</code></pre>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // File validation
        document.getElementById('CollectionFile').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                // Check file size (10MB limit)
                if (file.size > 10 * 1024 * 1024) {
                    alert('File size must be less than 10MB');
                    e.target.value = '';
                    return;
                }

                // Check file extension
                if (!file.name.toLowerCase().endsWith('.json')) {
                    alert('Please select a JSON file');
                    e.target.value = '';
                    return;
                }

                // Auto-fill name if empty
                const nameInput = document.getElementById('Name');
                if (!nameInput.value) {
                    nameInput.value = file.name.replace('.json', '');
                }
            }
        });
    </script>
}